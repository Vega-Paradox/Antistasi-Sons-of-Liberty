#include "defines.hpp"
#include "dialogs.hpp"

author="Barbolani, Chernarus port by Evoke, SOL by Warcrimes-R-Us";
OnLoadName = "Sons Of Liberty - Chernarus";
OnLoadMission = "We will soak the lands in blood to gain our freedom! Tear down the CDF!";
loadScreen = "loadingscreen.jpg";

overviewText = "We will soak the lands in blood to gain our freedom! Tear down the CDF!";
overviewPicture = "loadingscreen.jpg";

allowFunctionsLog = 1;
enableDebugConsole = 1;

respawn = "BASE";
respawnDelay = 15;
respawnVehicleDelay = 120;
respawnDialog = 1;
aiKills = 0;
disabledAI=1;
Saving = 0;
showCompass=1;
showRadio=1;
showGPS=1;
showMap=1;
showBinocular=1;
showNotepad=1;
showWatch=1;
debriefing=1;

//showGroupIndicator = 1;

class CfgTaskEnhancements
    {
    enable       = 1;            //0: disable new task features (default), 1: enable new task features & add new task markers and task widgets into the map
    3d           = 1;            //0: do not use new 3D markers (default), 1: replace task waypoints with new 3D markers
    3dDrawDist   = 3500;        //3d marker draw distance (default: 2000)
    share        = 1;            //0: do not count assigned players (default), 1: count how many players have the task assigned
    propagate    = 1;            //0: do not propagate (default), 1: propagate shared tasks to subordinates
    };

class CfgFunctions {
    #include "functions.hpp"
    #include "JeroenArsenal\functions.hpp"
};
class Header
{
gameType = COOP;
minplayers=1;
maxplayers=64;
};

class CfgSounds
{
    class fire
    {
        name="fire";
        sound[]={"Music\fire.ogg",db+12,1.0};
        titles[]={};
    };
};

class Params
{
    class loadSave
    {
        title = "Load last persistent save"; // Param name visible in the list
        values[] = {1,0}; // Values; must be integers; has to have the same number of elements as 'texts'
        texts[] = {"Yes","No"}; // Description of each selectable item
        default = 1; // Default value; must be listed in 'values' array, otherwise 0 is used
        // Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
    };
    class gameMode
    {
        title = "Game mode"; // Param name visible in the list
        values[] = {1,2,3,4}; // Values; must be integers; has to have the same number of elements as 'texts'
        texts[] = {"DPVC (Reb) vs CDF (Gov) vs RAF (Inv) - (RECOMMENDED!)","Reb vs Gov & Inv","Reb vs Gov","Reb vs Inv"}; // Description of each selectable item
        default = 1; // Default value; must be listed in 'values' array, otherwise 0 is used
        // Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
    };
    class autoSave
    {
        title = "Enable autosave (every hour)"; // Param name visible in the list
        values[] = {1,0}; // Values; must be integers; has to have the same number of elements as 'texts'
        texts[] = {"Yes","No"}; // Description of each selectable item
        default = 1; // Default value; must be listed in 'values' array, otherwise 0 is used
        // Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
    };
    class membership
    {
        title = "Enable server membership";
        texts[] = {"Yes","No"};
        values[] = {1,0};
        default = 0;
        //function = "BIS_fnc_paramDaytime"; // (Optional) [[Functions_Library_(Arma_3)|Function]] [[call]]ed when player joins, selected value is passed as an argument
        //isGlobal = 1; // (Optional) 1 to execute script / function locally for every player who joins, 0 to do it only on server
    };
    class switchComm
    {
        title = "Enable commander switch (highest ranked player is commander)";
        values[] = {1,0};
        texts[] = {"Yes","No"};
        default = 1;
        //file = "setViewDistance.sqf"; // (Optional) Script [[call]]ed when player joins, selected value is passed as an argument
    };
    class tkPunish
    {
        title = "Punish team kills";
        values[] = {1,0};
        texts[] = {"Yes","No"};
        default = 1;
        //file = "setViewDistance.sqf"; // (Optional) Script [[call]]ed when player joins, selected value is passed as an argument
    };
    class mRadius
    {
        title = "Minimum distance from HQ (meters) for side missions to spawn";
        values[] = {4000,8000,12000};
        // When 'texts' are missing, values will be displayed directly instead
        default = 4000;
        //file = "setViewDistance.sqf"; // (Optional) Script [[call]]ed when player joins, selected value is passed as an argument
    };
    class allowPvP
    {
        title = "Enable PvP slots";
        values[] = {1,0};
        texts[] = {"Yes","No"};
        default = 0;
        //file = "setViewDistance.sqf"; // (Optional) Script [[call]]ed when player joins, selected value is passed as an argument
    };
    class pMarkers
    {
        title = "Friendly player markers";
        values[] = {1,0};
        texts[] = {"Yes","No"};
        default = 1;
        //file = "setViewDistance.sqf"; // (Optional) Script [[call]]ed when player joins, selected value is passed as an argument
    };
    class AISkill
    {
        title = "AI skil level";
        values[] = {0.5,1,2};
        texts[] = {"Easy","Normal","Hard"};
        default = 1;
        //file = "setViewDistance.sqf"; // (Optional) Script [[call]]ed when player joins, selected value is passed as an argument
    };
    class unlockItem
    {
        title = "Number of weapons in ammo crate required to unlock infinite supply for arsenal";
        values[] = {15,25,40};
        default = 25;
        //file = "setViewDistance.sqf"; // (Optional) Script [[call]]ed when player joins, selected value is passed as an argument
    };
    class civTraffic
    {
        title = "Rate of civilian traffic";
        values[] = {0.5,1,3};
        texts[] = {"Low","Medium","JAM"};
        default = 1;
        //file = "setViewDistance.sqf"; // (Optional) Script [[call]]ed when player joins, selected value is passed as an argument
    };
    class memberSlots
    {
        title = "Percentage of reserved slots for members";
        values[] = {0,20,40,60,80,100};
        texts[] = {"None","20%","40%","60%","80%","All"};
        default = 20;
        //file = "setViewDistance.sqf"; // (Optional) Script [[call]]ed when player joins, selected value is passed as an argument
    };
    class memberDistance
    {
        title = "Max distance non-members can be from the HQ or the closest member (they will be teleported to the HQ after some time)";
        values[] = {4000,5000,6000,7000,8000,16000};
        texts[] = {"4 km","5 km","6 km","7 km","8 km","Unlimited"};
        default = 5000;
        //file = "setViewDistance.sqf"; // (Optional) Script [[call]]ed when player joins, selected value is passed as an argument
    };
    class allowFT
    {
        title = "Limited fast travel";
        values[] = {0,1};
        texts[] = {"No","Yes"};
        default = 1;
    };
    class staminaDisable   //Stamina toggle parameter
    {
        title = "Disable limited stamina";
        values[] = {0,1};
        texts[] = {"No","Yes"};
        default = 0;
    };
};

class CfgIdentities
{
    class protagonista
    {
        name = "Oleg";
        nameSound = "Warlock";
        face="WhiteHead_04";
    glasses="None";
    speaker="Male01GRE";
    pitch=1.096;
    };
     class amiguete
    {
        name = "Orenthal James Simpson";
        nameSound = "Warlock";
        face="AfricanHead_02";
	glasses="None";
	speaker="Male02RUS";
	pitch=1.098;
    };
      class Anthis
    {
        name = "Vasily";
        nameSound = "Anthis";
        face="WhiteHead_05";
	glasses="None";
	speaker="Male02GRE";
	pitch=1.097;
    };
      class Costa
    {
        name = "Anatoly";
        nameSound = "Costa";
        face="WhiteHead_07";
	glasses="None";
	speaker="Male03GRE";
	pitch=1.108;
    };
      class Dimitirou
    {
        name = "Evgeny";
        nameSound = "Dimitirou";
        face="WhiteHead_08";
	glasses="None";
	speaker="Male01GRE";
	pitch=1.095;
    };
      class Elias
    {
        name = "Dmitry";
        nameSound = "Elias";
        face="WhiteHead_09";
	glasses="None";
	speaker="Male02GRE";
	pitch=1.104;
    };
      class Gekas
    {
        name = "Grigory";
        nameSound = "Gekas";
        face="WhiteHead_10";
	glasses="None";
	speaker="Male03GRE";
	pitch=1.109;
    };
      class Kouris
    {
        name = "Kirill";
        nameSound = "Kouris";
        face="WhiteHead_11";
	glasses="None";
	speaker="Male01GRE";
	pitch=1.101;
    };
      class Leventis
    {
        name = "Leonid";
        nameSound = "Leventis";
        face="WhiteHead_12";
	glasses="None";
	speaker="Male02GRE";
	pitch=1.102;
    };
      class Markos
    {
        name = "Maxim";
        nameSound = "Markos";
        face="WhiteHead_13";
	glasses="None";
	speaker="Male03GRE";
	pitch=1.107;
	}
      class Nikas
    {
        name = "Nikita";
        nameSound = "Nikas";
        face="GreekHead_A3_05";
	glasses="None";
	speaker="Male03GRE";
	pitch=1.102;
    };
      class Nicolo
    {
        name = "Nikolai";
        nameSound = "Nicolo";
        face="GreekHead_A3_01";
	glasses="None";
	speaker="Male02GRE";
	pitch=1.108;
    };
      class Panas
    {
        name = "Pavel";
        nameSound = "Panas";
        face="GreekHead_A3_06";
	glasses="None";
	speaker="Male01GRE";
	pitch=1.096;
    };
       class Rosi
    {
        name = "Rostislav";
        nameSound = "Rosi";
        face="GreekHead_A3_07";
	glasses="None";
	speaker="Male01GRE";
	pitch=1.1;
    };
       class Samaras
    {
        name = "Spartak";
        nameSound = "Samaras";
        face="WhiteHead_06";
	glasses="None";
	speaker="Male03GRE";
	pitch=1.098;
    };
       class Thanos
    {
        name = "Taras";
        nameSound = "Thanos";
        face="GreekHead_A3_08";
	glasses="None";
	speaker="Male02GRE";
	pitch=1.101;
    };
       class Vega
    {
        name = "Ivan";
        nameSound = "Vega";
        face="GreekHead_A3_09";
	glasses="None";
	speaker="Male02GRE";
	pitch=1.102;
    };
};


/*
class CfgMusic
{
	tracks[]={};

	class DBS
	{
		name = "";
		sound[] = {"\music\dbs.ogg", db+5, 1.0};
	};

};
*/
class CfgDebriefing
{
	class End1
	{
		title = "V I C T O R Y";
		subtitle = "Chernarus is Ours!";
		description = "The population of Chernarus loves you!<br/>The brave rebel soldiers proved their valour, and you, Chernarus' new (not very)democratically elected leader, can finally have a nice holiday. A deserved rest in the hills, drinking with O.J. Simpson, the Grand Dragon of the DPVC. <br/><br/>I hear Altis is nice this time of the year";
		picture = "n_inf";
		pictureColor[] = {0.0,0.5,0.0,1};
	};
    class petrosDead
    {
        title = "OJ is Dead";
        subtitle = "Orenthal James Simpson is Dead";
        description = "Congratulations!: The renowned murderer O.J. Simpson is dead. Now with The rebels without a leader, you may think about joining them, and free Chernarus";
        picture = "b_unknown";
        pictureColor[] = {0.5,0.0,0.0,1};
    };
    class destroyedCities
    {
        title = "Chernarus is Destroyed";
        subtitle = "Chernarus was Destroyed by OPFOR";
        description = "One third of the population in Chernarus has been massacred by OPFOR.<br/>Piles of bodies line the streets, nobody wants to live here.";
        picture = "b_unknown";
        pictureColor[] = {0.5,0.0,0.0,1};
    };
    class modUnautorized
    {
        title = "Incompatible Mods";
        subtitle = "Incompatible Mods detected";
        description = "An incompatible mod installed on the server or your PC has been detected. To avoid support problems the mission is finished. Please uninstall unsupported (ASR AI, aLIVE, MCC or any AI behaviour) mods from your computer or server to be able to play Antistasi.";
        picture = "b_unknown";
        pictureColor[] = {0.0,0.5,0.0,1};
    };
    class serverFull
    {
        title = "Reserved Slot";
        subtitle = "This slot is reserved";
        description = "Sorry, but this slot is reserved for a Server Member. To become member, please contact to the server admin or clan.";
        picture = "b_unknown";
        pictureColor[] = {0.0,0.5,0.0,1};
    };
    class noPvP
    {
        title = "Slot Unavailable";
        subtitle = "This slot is unavailable";
        description = "Sorry, but this slot is unavailable for some reason: player not member, match not initialized, lack of rebel commander or recent role as rebel.";
        picture = "b_unknown";
        pictureColor[] = {0.0,0.5,0.0,1};
    };
    class hcDown
    {
        title = "HC Disconnected";
        subtitle = "Some Headless Client has been disconnected and mission has to stop to avoid malfunctions.";
        picture = "b_unknown";
        pictureColor[] = {0.0,0.5,0.0,1};
    };
    /*
    class asshole
    {
        title = "Forbidden";
        subtitle = "You are not allowed to run Antistasi";
        description = "Sorry, but you cannot play Antistasi in your server. Please contact author to discuss your situation.";
        picture = "b_unknown";
        pictureColor[] = {0.0,0.5,0.0,1};
    };
    */
};
